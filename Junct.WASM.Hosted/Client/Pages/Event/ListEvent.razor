@using Junct.WASM.Hosted.Shared.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager

<DataGrid TItem="Meet"
          Data="@meets">
    <ChildContent>
        <DataGridCommandColumn TItem="Meet"
                               NewCommandAllowed="true"
                               EditCommandAllowed="true"
                               DeleteCommandAllowed="true"
                               CancelCommandAllowed="true"
                               SaveCommandAllowed="true" />
        <DataGridColumn TItem="Meet" Field="@nameof(Meet.Title)" Caption="Title" Editable="true" Sortable="true" />
        <DataGridColumn TItem="Meet" Field="@nameof(Meet.Description)" Caption="Description" Editable="true" />
        <DataGridDateColumn TItem="Meet" Field="@nameof(Meet.StartDate)" Caption="Start Date" Editable="true" Sortable="true" />
        <DataGridDateColumn TItem="Meet" Field="@nameof(Meet.EndDate)" Caption="End Date" Editable="true" Sortable="true" />
        <DataGridColumn TItem="Meet" Field="@nameof(Meet.Venue.Name)" Caption="Venue" Editable="true" />
        <DataGridNumericColumn TItem="Meet" Field="@nameof(Meet.Attendees.Count)" Caption="Attendees" Editable="false" Sortable="true" />
    </ChildContent>
    <EmptyTemplate>
        <div class="box">
            No Events Found!
        </div>
    </EmptyTemplate>
    <LoadingTemplate>
        <div class="box">
            <progress class="progress is-small is-primary" max="100" />
        </div>
    </LoadingTemplate>
</DataGrid>

@code {
    Meet[] meets;
    int totalMeets;

    async Task LoadEventsFromService(DataGridReadDataEventArgs<Meet> m)
    {
        var response = await Http.GetFromJsonAsync<Meet[]>("api/MeetsController");

        meets = response.ToArray();
        totalMeets = response.Count();

        StateHasChanged();
    }
}